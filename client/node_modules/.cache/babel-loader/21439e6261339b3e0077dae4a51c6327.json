{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/emily/OneDrive/Desktop/bootcamp/challenges/book-search-engine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/emily/OneDrive/Desktop/bootcamp/challenges/book-search-engine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/emily/OneDrive/Desktop/bootcamp/challenges/book-search-engine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Jumbotron,Container,CardColumns,Card,Button}from\"react-bootstrap\";import{getMe,deleteBook}from\"../utils/API\";import Auth from\"../utils/auth\";import{removeBookId}from\"../utils/localStorage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SavedBooks=function SavedBooks(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),userData=_useState2[0],setUserData=_useState2[1];// use this to determine if `useEffect()` hook needs to run again\nvar userDataLength=Object.keys(userData).length;// create function that accepts the book's mongo _id value as param and deletes the book from the database\nvar handleDeleteBook=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(bookId){var token,response,updatedUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=Auth.loggedIn()?Auth.getToken():null;if(token){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:_context.prev=3;_context.next=6;return deleteBook(bookId,token);case 6:response=_context.sent;if(response.ok){_context.next=9;break;}throw new Error(\"something went wrong!\");case 9:_context.next=11;return response.json();case 11:updatedUser=_context.sent;setUserData(updatedUser);// upon success, remove book's id from localStorage\nremoveBookId(bookId);_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 19:case\"end\":return _context.stop();}}},_callee,null,[[3,16]]);}));return function handleDeleteBook(_x){return _ref.apply(this,arguments);};}();// if data isn't here yet, say so\nif(!userDataLength){return/*#__PURE__*/_jsx(\"h2\",{children:\"LOADING...\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Jumbotron,{fluid:true,className:\"text-light bg-dark\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Viewing saved books!\"})})}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:userData.savedBooks.length?\"Viewing \".concat(userData.savedBooks.length,\" saved \").concat(userData.savedBooks.length===1?\"book\":\"books\",\":\"):\"You have no saved books!\"}),/*#__PURE__*/_jsx(CardColumns,{children:userData.savedBooks.map(function(book){return/*#__PURE__*/_jsxs(Card,{border:\"dark\",children:[book.image?/*#__PURE__*/_jsx(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:book.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"small\",children:[\"Authors: \",book.authors]}),/*#__PURE__*/_jsx(Card.Text,{children:book.description}),/*#__PURE__*/_jsx(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteBook(book.bookId);},children:\"Delete this Book!\"})]})]},book.bookId);})})]})]});};export default SavedBooks;","map":{"version":3,"sources":["C:/Users/emily/OneDrive/Desktop/bootcamp/challenges/book-search-engine/client/src/pages/SavedBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","getMe","deleteBook","Auth","removeBookId","SavedBooks","userData","setUserData","userDataLength","Object","keys","length","handleDeleteBook","bookId","token","loggedIn","getToken","response","ok","Error","json","updatedUser","console","error","savedBooks","map","book","image","title","authors","description"],"mappings":"ykBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OACEC,SADF,CAEEC,SAFF,CAGEC,WAHF,CAIEC,IAJF,CAKEC,MALF,KAMO,iBANP,CAQA,OAASC,KAAT,CAAgBC,UAAhB,KAAkC,cAAlC,CACA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CACA,OAASC,YAAT,KAA6B,uBAA7B,C,6IAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,eACSX,QAAQ,CAAC,EAAD,CADjB,wCAChBY,QADgB,eACNC,WADM,eAGvB;AACA,GAAMC,CAAAA,cAAc,CAAGC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,MAA7C,CAEA;AACA,GAAMC,CAAAA,gBAAgB,0FAAG,iBAAOC,MAAP,iJACjBC,KADiB,CACTX,IAAI,CAACY,QAAL,GAAkBZ,IAAI,CAACa,QAAL,EAAlB,CAAoC,IAD3B,IAGlBF,KAHkB,yDAId,KAJc,+CAQEZ,CAAAA,UAAU,CAACW,MAAD,CAASC,KAAT,CARZ,QAQfG,QARe,kBAUhBA,QAAQ,CAACC,EAVO,8BAWb,IAAIC,CAAAA,KAAJ,CAAU,uBAAV,CAXa,+BAcKF,CAAAA,QAAQ,CAACG,IAAT,EAdL,SAcfC,WAde,eAerBd,WAAW,CAACc,WAAD,CAAX,CACA;AACAjB,YAAY,CAACS,MAAD,CAAZ,CAjBqB,iFAmBrBS,OAAO,CAACC,KAAR,cAnBqB,qEAAH,kBAAhBX,CAAAA,gBAAgB,4CAAtB,CAuBA;AACA,GAAI,CAACJ,cAAL,CAAqB,CACnB,mBAAO,kCAAP,CACD,CAED,mBACE,wCACE,KAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,SAAS,CAAC,oBAA3B,uBACE,KAAC,SAAD,wBACE,4CADF,EADF,EADF,cAME,MAAC,SAAD,yBACE,oBACGF,QAAQ,CAACkB,UAAT,CAAoBb,MAApB,mBACcL,QAAQ,CAACkB,UAAT,CAAoBb,MADlC,mBAEKL,QAAQ,CAACkB,UAAT,CAAoBb,MAApB,GAA+B,CAA/B,CAAmC,MAAnC,CAA4C,OAFjD,MAIG,0BALN,EADF,cAQE,KAAC,WAAD,WACGL,QAAQ,CAACkB,UAAT,CAAoBC,GAApB,CAAwB,SAACC,IAAD,CAAU,CACjC,mBACE,MAAC,IAAD,EAAwB,MAAM,CAAC,MAA/B,WACGA,IAAI,CAACC,KAAL,cACC,KAAC,IAAD,CAAM,GAAN,EACE,GAAG,CAAED,IAAI,CAACC,KADZ,CAEE,GAAG,yBAAmBD,IAAI,CAACE,KAAxB,CAFL,CAGE,OAAO,CAAC,KAHV,EADD,CAMG,IAPN,cAQE,MAAC,IAAD,CAAM,IAAN,yBACE,KAAC,IAAD,CAAM,KAAN,WAAaF,IAAI,CAACE,KAAlB,EADF,cAEE,WAAG,SAAS,CAAC,OAAb,uBAA+BF,IAAI,CAACG,OAApC,GAFF,cAGE,KAAC,IAAD,CAAM,IAAN,WAAYH,IAAI,CAACI,WAAjB,EAHF,cAIE,KAAC,MAAD,EACE,SAAS,CAAC,sBADZ,CAEE,OAAO,CAAE,yBAAMlB,CAAAA,gBAAgB,CAACc,IAAI,CAACb,MAAN,CAAtB,EAFX,+BAJF,GARF,GAAWa,IAAI,CAACb,MAAhB,CADF,CAsBD,CAvBA,CADH,EARF,GANF,GADF,CA4CD,CA/ED,CAiFA,cAAeR,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Jumbotron,\r\n  Container,\r\n  CardColumns,\r\n  Card,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nimport { getMe, deleteBook } from \"../utils/API\";\r\nimport Auth from \"../utils/auth\";\r\nimport { removeBookId } from \"../utils/localStorage\";\r\n\r\nconst SavedBooks = () => {\r\n  const [userData, setUserData] = useState({});\r\n\r\n  // use this to determine if `useEffect()` hook needs to run again\r\n  const userDataLength = Object.keys(userData).length;\r\n\r\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\r\n  const handleDeleteBook = async (bookId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await deleteBook(bookId, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUserData(updatedUser);\r\n      // upon success, remove book's id from localStorage\r\n      removeBookId(bookId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // if data isn't here yet, say so\r\n  if (!userDataLength) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className=\"text-light bg-dark\">\r\n        <Container>\r\n          <h1>Viewing saved books!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBooks.length\r\n            ? `Viewing ${userData.savedBooks.length} saved ${\r\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\r\n              }:`\r\n            : \"You have no saved books!\"}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border=\"dark\">\r\n                {book.image ? (\r\n                  <Card.Img\r\n                    src={book.image}\r\n                    alt={`The cover for ${book.title}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className=\"small\">Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  <Button\r\n                    className=\"btn-block btn-danger\"\r\n                    onClick={() => handleDeleteBook(book.bookId)}\r\n                  >\r\n                    Delete this Book!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBooks;\r\n"]},"metadata":{},"sourceType":"module"}